apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - name: sonarr
        image: linuxserver/sonarr:latest
        ports:
        - containerPort: 8989
        volumeMounts:
        - name: config-storage
          mountPath: /config
          subPath: config/sonarr
        - name: nfs-storage
          mountPath: /tv
          subPath: mediaserver/media/tv
        - name: nfs-storage
          mountPath: /animation
          subPath: mediaserver/media/animation
        - name: nfs-storage
          mountPath: /downloads
          subPath: mediaserver/download
        - name: nfs-storage
          mountPath: /incomplete-downloads
          subPath: mediaserver/download
        envFrom:
          - configMapRef:
              name: app-config
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      volumes:
      - name: config-storage
        hostPath:
          path: /home/lucas/k3s-mediastack
          type: Directory
      - name: nfs-storage
        nfs:
          path: /data
          server: 192.168.1.190
          readOnly: false


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      containers:
      - name: prowlarr
        image: linuxserver/prowlarr:latest
        ports:
        - containerPort: 9696
        volumeMounts:
        - name: config-storage
          mountPath: /config
          subPath: config/prowlarr
        envFrom:
          - configMapRef:
              name: app-config
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        livenessProbe:
          httpGet:
            path: /health
            port: 9696
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 9696
      volumes:
      - name: config-storage
        hostPath:
          path: /home/lucas/k3s-mediastack
          type: Directory

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transmission
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transmission
  template:
    metadata:
      labels:
        app: transmission
    spec:
      containers:
      - name: transmission
        image: linuxserver/transmission:latest
        ports:
        - containerPort: 9091
        volumeMounts:
        - name: nfs-storage
          mountPath: /config
          subPath: mediaserver/config/transmission
        - name: nfs-storage
          mountPath: /downloads
          subPath: mediaserver/download
        - name: nfs-storage
          mountPath: /incomplete-downloads
          subPath: mediaserver/download
        - name: nfs-storage
          mountPath: /media
          subPath: mediaserver/media
        envFrom:
          - configMapRef:
              name: app-config
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      volumes:
      - name: nfs-storage
        nfs:
          path: /data
          server: 192.168.1.190
          readOnly: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emby
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emby
  template:
    metadata:
      labels:
        app: emby
    spec:
      containers:
      - name: emby
        image: ghcr.io/linuxserver/emby
        ports:
        - containerPort: 8096
        volumeMounts:
        - name: nfs-storage
          mountPath: /config
          subPath: mediaserver/config/emby
        - name: nfs-storage
          mountPath: /media
          subPath: mediaserver/media
        - name: nfs-storage
          mountPath: /data
          subPath: mediaserver/data
        envFrom:
          - configMapRef:
              name: app-config
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      volumes:
      - name: nfs-storage
        nfs:
          path: /data
          server: 192.168.1.190
          readOnly: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
      - name: radarr
        image: linuxserver/radarr:latest
        ports:
        - containerPort: 7878
        volumeMounts:
        - name: config-storage
          mountPath: /config
          subPath: config/radarr
        - name: nfs-storage
          mountPath: /movies
          subPath: mediaserver/media/movies
        - name: nfs-storage
          mountPath: /animation
          subPath: mediaserver/media/animation
        - name: nfs-storage
          mountPath: /downloads
          subPath: mediaserver/download
        envFrom:
          - configMapRef:
              name: app-config
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      volumes:
      - name: config-storage
        hostPath:
          path: /home/lucas/k3s-mediastack
          type: Directory
      - name: nfs-storage
        nfs:
          path: /data
          server: 192.168.1.190
          readOnly: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nzbget
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nzbget
  template:
    metadata:
      labels:
        app: nzbget
    spec:
      containers:
      - name: nzbget
        image: linuxserver/nzbget:latest
        ports:
        - containerPort: 6789
        volumeMounts:
        - name: nfs-storage
          mountPath: /config
          subPath: mediaserver/config/nzbget
        - name: nfs-storage
          mountPath: /downloads
          subPath: mediaserver/download
        - name: nfs-storage
          mountPath: /incomplete-downloads
          subPath: mediaserver/download/incomplete
        - name: nfs-storage
          mountPath: /media
          subPath: mediaserver/media
        envFrom:
          - configMapRef:
              name: app-config
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      volumes:
      - name: nfs-storage
        nfs:
          path: /data
          server: 192.168.1.190
          readOnly: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bazarr
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bazarr
  template:
    metadata:
      labels:
        app: bazarr
    spec:
      containers:
      - name: bazarr
        image: linuxserver/bazarr:latest
        ports:
        - containerPort: 6767
        volumeMounts:
        - name: config-storage
          mountPath: /config
          subPath: config/bazarr
        - name: nfs-storage
          mountPath: /media
          subPath: mediaserver/media
        - name: nfs-storage
          mountPath: /downloads
          subPath: mediaserver/download
        envFrom:
          - configMapRef:
              name: app-config
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      volumes:
      - name: config-storage
        hostPath:
          path: /home/lucas/k3s-mediastack
          type: Directory
      - name: nfs-storage
        nfs:
          path: /data
          server: 192.168.1.190
          readOnly: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ombi
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ombi
  template:
    metadata:
      labels:
        app: ombi
    spec:
      containers:
      - name: ombi
        image: linuxserver/ombi:latest
        ports:
        - containerPort: 3579
        volumeMounts:
        - name: nfs-storage
          mountPath: /config
          subPath: mediaserver/config/ombi
        envFrom:
          - configMapRef:
              name: app-config
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      volumes:
      - name: nfs-storage
        nfs:
          path: /data
          server: 192.168.1.190
          readOnly: false
