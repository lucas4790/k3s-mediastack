apiVersion: v1
kind: Namespace
metadata:
  name: media-services

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config
  namespace: media-services
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - name: sonarr
        image: linuxserver/sonarr:latest
        ports:
        - containerPort: 8989
        volumeMounts:
        - name: sonarr-config
          mountPath: /config
        env:
        - name: PUID
          value: "0"
        - name: PGID
          value: "0"
        - name: TZ
          value: "Europe/Amsterdam"
      volumes:
      - name: sonarr-config
        persistentVolumeClaim:
          claimName: sonarr-config

---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: media-services
spec:
  selector:
    app: sonarr
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8989
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jackett
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jackett
  template:
    metadata:
      labels:
        app: jackett
    spec:
      containers:
      - name: jackett
        image: linuxserver/jackett:latest
        ports:
        - containerPort: 9117
        volumeMounts:
        - name: jackett-config
          mountPath: /config
      volumes:
      - name: jackett-config
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: jackett
  namespace: media-services
spec:
  selector:
    app: jackett
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9117
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transmission
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transmission
  template:
    metadata:
      labels:
        app: transmission
    spec:
      containers:
      - name: transmission
        image: linuxserver/transmission:latest
        ports:
        - containerPort: 9091
        volumeMounts:
        - name: transmission-config
          mountPath: /config
        - name: transmission-downloads
          mountPath: /downloads
        env:
        - name: PUID
          value: "0"
        - name: PGID
          value: "0"
        - name: TZ
          value: "Europe/Amsterdam"
      volumes:
      - name: transmission-config
        emptyDir: {}
      - name: transmission-downloads
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: transmission
  namespace: media-services
spec:
  selector:
    app: transmission
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9091
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: linuxserver/jellyfin:latest
        ports:
        - containerPort: 8096
        volumeMounts:
        - name: jellyfin-config
          mountPath: /config
        - name: jellyfin-media
          mountPath: /media
        env:
        - name: PUID
          value: "0"
        - name: PGID
          value: "0"
        - name: TZ
          value: "Europe/Amsterdam"
      resources:
        limits:
          cpu: "1"
          memory: "1Gi"
      volumes:
      - name: jellyfin-config
        emptyDir: {}
      - name: jellyfin-media
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: media-services
spec:
  selector:
    app: jellyfin
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8096
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whisparr
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whisparr
  template:
    metadata:
      labels:
        app: whisparr
    spec:
      containers:
      - name: whisparr
        image: linuxserver/whisparr:latest
        ports:
        - containerPort: 8192
        volumeMounts:
        - name: whisparr-config
          mountPath: /config
        env:
        - name: PUID
          value: "0"
        - name: PGID
          value: "0"
        - name: TZ
          value: "Europe/Amsterdam"
      volumes:
      - name: whisparr-config
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: whisparr
  namespace: media-services
spec:
  selector:
    app: whisparr
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8192
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lidarr
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lidarr
  template:
    metadata:
      labels:
        app: lidarr
    spec:
      containers:
      - name: lidarr
        image: linuxserver/lidarr:latest
        ports:
        - containerPort: 8686
        volumeMounts:
        - name: lidarr-config
          mountPath: /config
        env:
        - name: PUID
          value: "0"
        - name: PGID
          value: "0"
        - name: TZ
          value: "Europe/Amsterdam"
      volumes:
      - name: lidarr-config
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: lidarr
  namespace: media-services
spec:
  selector:
    app: lidarr
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8686
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: media-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      containers:
      - name: prowlarr
        image: linuxserver/prowlarr:latest
        ports:
        - containerPort: 9696
        volumeMounts:
        - name: prowlarr-config
          mountPath: /config
        env:
        - name: PUID
          value: "0"
        - name: PGID
          value: "0"
        - name: TZ
          value: "Europe/Amsterdam"
      volumes:
      - name: prowlarr-config
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  namespace: media-services
spec:
  selector:
    app: prowlarr
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9696
  type: LoadBalancer
